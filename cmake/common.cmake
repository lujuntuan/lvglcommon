if(DEFINED ENV{LVGL_3RDPARTY_INCLUDE_DIR})
    set(LVGL_3RDPARTY_INCLUDE_DIR $ENV{LVGL_3RDPARTY_INCLUDE_DIR} CACHE PATH "")
else()
    set(LVGL_3RDPARTY_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/3rdparty/${PL_SYS}-${PL_COMPILER}/include CACHE PATH "")
endif()

if(DEFINED ENV{LVGL_3RDPARTY_LIB_DIR})
    set(LVGL_3RDPARTY_LIB_DIR $ENV{LVGL_3RDPARTY_LIB_DIR} CACHE PATH "")
else()
    set(LVGL_3RDPARTY_LIB_DIR ${PROJECT_SOURCE_DIR}/3rdparty/${PL_SYS}-${PL_COMPILER}/lib/${PL_ARCH} CACHE PATH "")
endif()

set(CMAKE_DEBUG_POSTFIX "d")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/lib)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/bin)
set(TARGET_SYS_PATH $ENV{TARGET_SYS_PATH})
if("${TARGET_SYS_PATH}*" STREQUAL "*")
    set(TARGET_SYS_PATH ${CMAKE_INSTALL_PREFIX})
endif()

include_directories(${PROJECT_SOURCE_DIR}/src)
include_directories(${LVGL_3RDPARTY_INCLUDE_DIR})
link_directories(${LVGL_3RDPARTY_LIB_DIR})

set(USE_WINDOWS FALSE)
set(USE_WIN32DRV FALSE)
set(USE_MONITOR FALSE)
set(USE_FBDEV FALSE)
set(USE_DRM FALSE)
set(USE_OPENWFD FALSE)

set(USE_MOUSE FALSE)
set(USE_EVDEV FALSE)
set(USE_MTOUCH FALSE)

if(WIN32)
    if(MINGW)
        set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -mwindows")
    elseif(MSVC)
        set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /SUBSYSTEM:WINDOWS /ENTRY:mainCRTStartup")
    endif()
    set(USE_MONITOR TRUE)
    set(USE_MOUSE TRUE)
elseif(LINUX)
    link_libraries(m)
    set(USE_MONITOR TRUE)
    set(USE_MOUSE TRUE)
elseif(QNX)
    set(USE_OPENWFD TRUE)
    set(USE_MTOUCH TRUE)
endif()

if(USE_WINDOWS)
    add_definitions("-DUSE_WINDOWS=1")
    link_libraries(user32 gdi32)
elseif(USE_WIN32DRV)
    add_definitions("-DUSE_WIN32DRV=1")
elseif(USE_MONITOR)
    add_definitions("-DUSE_MONITOR=1")
    link_libraries(SDL2)
elseif(USE_FBDEV)
    add_definitions("-DUSE_FBDEV=1")
elseif(USE_DRM)
    add_definitions("-DUSE_DRM=1")
    include_directories(/usr/include/libdrm)
    link_libraries(drm)
elseif(USE_OPENWFD)
    add_definitions("-DUSE_OPENWFD=1")
    link_libraries(openwfd planedef)
endif()

if(USE_MOUSE)
    add_definitions("-DUSE_MOUSE=1")
elseif(USE_EVDEV)
    add_definitions("-DUSE_EVDEV=1")
    link_libraries(evdev)
elseif(USE_MTOUCH)
    add_definitions("-DUSE_MTOUCH=1")
    link_libraries(inputevents mtouch-calib)
endif()
